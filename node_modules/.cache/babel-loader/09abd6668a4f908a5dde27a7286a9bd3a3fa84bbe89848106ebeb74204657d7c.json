{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"rehackt\";\nimport { getApolloContext } from \"./ApolloContext.js\";\nexport var ApolloProvider = function (_a) {\n  var client = _a.client,\n    children = _a.children;\n  var ApolloContext = getApolloContext();\n  var parentContext = React.useContext(ApolloContext);\n  var context = React.useMemo(function () {\n    return __assign(__assign({}, parentContext), {\n      client: client || parentContext.client\n    });\n  }, [parentContext, client]);\n  invariant(context.client, 46);\n  return React.createElement(ApolloContext.Provider, {\n    value: context\n  }, children);\n};","map":{"version":3,"names":["invariant","React","getApolloContext","ApolloProvider","_a","client","children","ApolloContext","parentContext","useContext","context","useMemo","__assign","createElement","Provider","value"],"sources":["/Users/henilsuhagiya/Desktop/Study/Bluestone/formdata/node_modules/@apollo/src/react/context/ApolloProvider.tsx"],"sourcesContent":["import { invariant } from \"../../utilities/globals/index.js\";\n\nimport * as React from \"rehackt\";\nimport type * as ReactTypes from \"react\";\n\nimport type { ApolloClient } from \"../../core/index.js\";\nimport { getApolloContext } from \"./ApolloContext.js\";\n\nexport interface ApolloProviderProps<TCache> {\n  client: ApolloClient<TCache>;\n  children: ReactTypes.ReactNode | ReactTypes.ReactNode[] | null;\n}\n\nexport const ApolloProvider: ReactTypes.FC<ApolloProviderProps<any>> = ({\n  client,\n  children,\n}) => {\n  const ApolloContext = getApolloContext();\n  const parentContext = React.useContext(ApolloContext);\n\n  const context = React.useMemo(() => {\n    return {\n      ...parentContext,\n      client: client || parentContext.client,\n    };\n  }, [parentContext, client]);\n\n  invariant(\n    context.client,\n    \"ApolloProvider was not passed a client instance. Make \" +\n      'sure you pass in your client via the \"client\" prop.'\n  );\n\n  return (\n    <ApolloContext.Provider value={context}>{children}</ApolloContext.Provider>\n  );\n};\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,kCAAkC;AAE5D,OAAO,KAAKC,KAAK,MAAM,SAAS;AAIhC,SAASC,gBAAgB,QAAQ,oBAAoB;AAOrD,OAAO,IAAMC,cAAc,GAA4C,SAAAA,CAACC,EAGvE;MAFCC,MAAM,GAAAD,EAAA,CAAAC,MAAA;IACNC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;EAER,IAAMC,aAAa,GAAGL,gBAAgB,EAAE;EACxC,IAAMM,aAAa,GAAGP,KAAK,CAACQ,UAAU,CAACF,aAAa,CAAC;EAErD,IAAMG,OAAO,GAAGT,KAAK,CAACU,OAAO,CAAC;IAC5B,OAAAC,QAAA,CAAAA,QAAA,KACKJ,aAAa;MAChBH,MAAM,EAAEA,MAAM,IAAIG,aAAa,CAACH;IAAM;EAE1C,CAAC,EAAE,CAACG,aAAa,EAAEH,MAAM,CAAC,CAAC;EAE3BL,SAAS,CACPU,OAAO,CAACL,MAAM,EACd;SACEJ,KAAA,CAAAY,aAAA,CAAAN,aAAA,CAAAO,QAAA;IAAAC,KACF,EAAAL;EAAA,GAAAJ,QAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}