{"ast":null,"code":"import { newInvariantError } from \"../../utilities/globals/index.js\";\nexport var checkFetcher = function (fetcher) {\n  if (!fetcher && typeof fetch === \"undefined\") {\n    throw newInvariantError(37);\n  }\n};","map":{"version":3,"names":["newInvariantError","checkFetcher","fetcher","fetch"],"sources":["/Users/henilsuhagiya/Desktop/Study/Bluestone/formdata/node_modules/@apollo/src/link/http/checkFetcher.ts"],"sourcesContent":["import { newInvariantError } from \"../../utilities/globals/index.js\";\n\nexport const checkFetcher = (fetcher: typeof fetch | undefined) => {\n  if (!fetcher && typeof fetch === \"undefined\") {\n    throw newInvariantError(`\n\"fetch\" has not been found globally and no fetcher has been \\\nconfigured. To fix this, install a fetch package (like \\\nhttps://www.npmjs.com/package/cross-fetch), instantiate the \\\nfetcher, and pass it into your HttpLink constructor. For example:\n\nimport fetch from 'cross-fetch';\nimport { ApolloClient, HttpLink } from '@apollo/client';\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: '/graphql', fetch })\n});\n    `);\n  }\n};\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,kCAAkC;AAEpE,OAAO,IAAMC,YAAY,GAAG,SAAAA,CAACC,OAAiC;EAC5D,IAAI,CAACA,OAAO,IAAI,OAAOC,KAAK,KAAK,WAAW,EAAE;IAC5C,MAAMH,iBAAiB,CAAC;EAY1B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}