{"ast":null,"code":"var _jsxFileName = \"/Users/henilsuhagiya/Desktop/Study/Bluestone/formdata/src/index.js\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, gql } from '@apollo/client';\nimport { createRoot } from 'react-dom/client';\n// import App from './App';\nimport App from './UpdateUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/graphql',\n  cache: new InMemoryCache()\n});\nclient.query({\n  query: gql`\n      query GetLocations {\n        locations {\n          id\n          name\n          description\n          photo\n        }\n      }\n    `\n}).then(result => console.log(result));\nconst root = createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 5\n}, this));","map":{"version":3,"names":["ApolloClient","InMemoryCache","ApolloProvider","gql","createRoot","App","jsxDEV","_jsxDEV","client","uri","cache","query","then","result","console","log","root","document","getElementById","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/henilsuhagiya/Desktop/Study/Bluestone/formdata/src/index.js"],"sourcesContent":["import { ApolloClient, InMemoryCache, ApolloProvider ,gql} from '@apollo/client';\nimport { createRoot } from 'react-dom/client';\n// import App from './App';\nimport App from './UpdateUser';\n \nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/graphql',\n  cache: new InMemoryCache()\n});\n\nclient\n.query({\n    query: gql`\n      query GetLocations {\n        locations {\n          id\n          name\n          description\n          photo\n        }\n      }\n    `,\n  })\n  .then((result) => console.log(result));\n\nconst root = createRoot(document.getElementById('root'));\n\nroot.render(\n    <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);\n"],"mappings":";AAAA,SAASA,YAAY,EAAEC,aAAa,EAAEC,cAAc,EAAEC,GAAG,QAAO,gBAAgB;AAChF,SAASC,UAAU,QAAQ,kBAAkB;AAC7C;AACA,OAAOC,GAAG,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,MAAM,GAAG,IAAIR,YAAY,CAAC;EAC9BS,GAAG,EAAE,+BAA+B;EACpCC,KAAK,EAAE,IAAIT,aAAa,CAAC;AAC3B,CAAC,CAAC;AAEFO,MAAM,CACLG,KAAK,CAAC;EACHA,KAAK,EAAER,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,CAAC,CACDS,IAAI,CAAEC,MAAM,IAAKC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC;AAExC,MAAMG,IAAI,GAAGZ,UAAU,CAACa,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAExDF,IAAI,CAACG,MAAM,eACPZ,OAAA,CAACL,cAAc;EAACM,MAAM,EAAEA,MAAO;EAAAY,QAAA,eAC/Bb,OAAA,CAACF,GAAG;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACO,CAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}