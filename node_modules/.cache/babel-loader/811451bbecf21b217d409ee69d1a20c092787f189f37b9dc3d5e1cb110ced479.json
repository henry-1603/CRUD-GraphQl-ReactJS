{"ast":null,"code":"import { __assign, __spreadArray } from \"tslib\";\nimport { cacheSizes } from \"./sizes.js\";\nvar globalCaches = {};\nexport function registerGlobalCache(name, getSize) {\n  globalCaches[name] = getSize;\n}\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getApolloClientMemoryInternals = globalThis.__DEV__ !== false ? _getApolloClientMemoryInternals : undefined;\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getInMemoryCacheMemoryInternals = globalThis.__DEV__ !== false ? _getInMemoryCacheMemoryInternals : undefined;\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getApolloCacheMemoryInternals = globalThis.__DEV__ !== false ? _getApolloCacheMemoryInternals : undefined;\nfunction getCurrentCacheSizes() {\n  // `defaultCacheSizes` is a `const enum` that will be inlined during build, so we have to reconstruct it's shape here\n  var defaults = {\n    parser: 1000 /* defaultCacheSizes[\"parser\"] */,\n    canonicalStringify: 1000 /* defaultCacheSizes[\"canonicalStringify\"] */,\n    print: 2000 /* defaultCacheSizes[\"print\"] */,\n    \"documentTransform.cache\": 2000 /* defaultCacheSizes[\"documentTransform.cache\"] */,\n    \"queryManager.getDocumentInfo\": 2000 /* defaultCacheSizes[\"queryManager.getDocumentInfo\"] */,\n    \"PersistedQueryLink.persistedQueryHashes\": 2000 /* defaultCacheSizes[\"PersistedQueryLink.persistedQueryHashes\"] */,\n    \"fragmentRegistry.transform\": 2000 /* defaultCacheSizes[\"fragmentRegistry.transform\"] */,\n    \"fragmentRegistry.lookup\": 1000 /* defaultCacheSizes[\"fragmentRegistry.lookup\"] */,\n    \"fragmentRegistry.findFragmentSpreads\": 4000 /* defaultCacheSizes[\"fragmentRegistry.findFragmentSpreads\"] */,\n    \"cache.fragmentQueryDocuments\": 1000 /* defaultCacheSizes[\"cache.fragmentQueryDocuments\"] */,\n    \"removeTypenameFromVariables.getVariableDefinitions\": 2000 /* defaultCacheSizes[\"removeTypenameFromVariables.getVariableDefinitions\"] */,\n    \"inMemoryCache.maybeBroadcastWatch\": 5000 /* defaultCacheSizes[\"inMemoryCache.maybeBroadcastWatch\"] */,\n    \"inMemoryCache.executeSelectionSet\": 50000 /* defaultCacheSizes[\"inMemoryCache.executeSelectionSet\"] */,\n    \"inMemoryCache.executeSubSelectedArray\": 10000 /* defaultCacheSizes[\"inMemoryCache.executeSubSelectedArray\"] */\n  };\n  return Object.fromEntries(Object.entries(defaults).map(function (_a) {\n    var k = _a[0],\n      v = _a[1];\n    return [k, cacheSizes[k] || v];\n  }));\n}\nfunction _getApolloClientMemoryInternals() {\n  var _a, _b, _c, _d, _e;\n  if (!(globalThis.__DEV__ !== false)) throw new Error(\"only supported in development mode\");\n  return {\n    limits: getCurrentCacheSizes(),\n    sizes: __assign({\n      print: (_a = globalCaches.print) === null || _a === void 0 ? void 0 : _a.call(globalCaches),\n      parser: (_b = globalCaches.parser) === null || _b === void 0 ? void 0 : _b.call(globalCaches),\n      canonicalStringify: (_c = globalCaches.canonicalStringify) === null || _c === void 0 ? void 0 : _c.call(globalCaches),\n      links: linkInfo(this.link),\n      queryManager: {\n        getDocumentInfo: this[\"queryManager\"][\"transformCache\"].size,\n        documentTransforms: transformInfo(this[\"queryManager\"].documentTransform)\n      }\n    }, (_e = (_d = this.cache).getMemoryInternals) === null || _e === void 0 ? void 0 : _e.call(_d))\n  };\n}\nfunction _getApolloCacheMemoryInternals() {\n  return {\n    cache: {\n      fragmentQueryDocuments: getWrapperInformation(this[\"getFragmentDoc\"])\n    }\n  };\n}\nfunction _getInMemoryCacheMemoryInternals() {\n  var fragments = this.config.fragments;\n  return __assign(__assign({}, _getApolloCacheMemoryInternals.apply(this)), {\n    addTypenameDocumentTransform: transformInfo(this[\"addTypenameTransform\"]),\n    inMemoryCache: {\n      executeSelectionSet: getWrapperInformation(this[\"storeReader\"][\"executeSelectionSet\"]),\n      executeSubSelectedArray: getWrapperInformation(this[\"storeReader\"][\"executeSubSelectedArray\"]),\n      maybeBroadcastWatch: getWrapperInformation(this[\"maybeBroadcastWatch\"])\n    },\n    fragmentRegistry: {\n      findFragmentSpreads: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.findFragmentSpreads),\n      lookup: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.lookup),\n      transform: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.transform)\n    }\n  });\n}\nfunction isWrapper(f) {\n  return !!f && \"dirtyKey\" in f;\n}\nfunction getWrapperInformation(f) {\n  return isWrapper(f) ? f.size : undefined;\n}\nfunction isDefined(value) {\n  return value != null;\n}\nfunction transformInfo(transform) {\n  return recurseTransformInfo(transform).map(function (cache) {\n    return {\n      cache: cache\n    };\n  });\n}\nfunction recurseTransformInfo(transform) {\n  return transform ? __spreadArray(__spreadArray([getWrapperInformation(transform === null || transform === void 0 ? void 0 : transform[\"performWork\"])], recurseTransformInfo(transform === null || transform === void 0 ? void 0 : transform[\"left\"]), true), recurseTransformInfo(transform === null || transform === void 0 ? void 0 : transform[\"right\"]), true).filter(isDefined) : [];\n}\nfunction linkInfo(link) {\n  var _a;\n  return link ? __spreadArray(__spreadArray([(_a = link === null || link === void 0 ? void 0 : link.getMemoryInternals) === null || _a === void 0 ? void 0 : _a.call(link)], linkInfo(link === null || link === void 0 ? void 0 : link.left), true), linkInfo(link === null || link === void 0 ? void 0 : link.right), true).filter(isDefined) : [];\n}","map":{"version":3,"names":["cacheSizes","globalCaches","registerGlobalCache","name","getSize","getApolloClientMemoryInternals","globalThis","__DEV__","_getApolloClientMemoryInternals","undefined","getInMemoryCacheMemoryInternals","_getInMemoryCacheMemoryInternals","getApolloCacheMemoryInternals","_getApolloCacheMemoryInternals","getCurrentCacheSizes","defaults","parser","canonicalStringify","print","Object","fromEntries","entries","map","_a","k","v","Error","limits","sizes","__assign","call","_b","_c","links","linkInfo","link","queryManager","getDocumentInfo","size","documentTransforms","transformInfo","documentTransform","_e","_d","cache","getMemoryInternals","fragmentQueryDocuments","getWrapperInformation","fragments","config","apply","addTypenameDocumentTransform","inMemoryCache","executeSelectionSet","executeSubSelectedArray","maybeBroadcastWatch","fragmentRegistry","findFragmentSpreads","lookup","transform","isWrapper","f","isDefined","value","recurseTransformInfo","__spreadArray","filter","left","right"],"sources":["/Users/henilsuhagiya/Desktop/Study/Bluestone/formdata/node_modules/@apollo/src/utilities/caching/getMemoryInternals.ts"],"sourcesContent":["import type { OptimisticWrapperFunction } from \"optimism\";\nimport type {\n  InMemoryCache,\n  DocumentTransform,\n  ApolloLink,\n  ApolloCache,\n} from \"../../core/index.js\";\nimport type { ApolloClient } from \"../../core/index.js\";\nimport type { CacheSizes } from \"./sizes.js\";\nimport { cacheSizes, defaultCacheSizes } from \"./sizes.js\";\n\nconst globalCaches: {\n  print?: () => number;\n  parser?: () => number;\n  canonicalStringify?: () => number;\n} = {};\n\nexport function registerGlobalCache(\n  name: keyof typeof globalCaches,\n  getSize: () => number\n) {\n  globalCaches[name] = getSize;\n}\n\n/**\n * Transformative helper type to turn a function of the form\n * ```ts\n * (this: any) => R\n * ```\n * into a function of the form\n * ```ts\n * () => R\n * ```\n * preserving the return type, but removing the `this` parameter.\n *\n * @remarks\n *\n * Further down in the definitions of `_getApolloClientMemoryInternals`,\n * `_getApolloCacheMemoryInternals` and `_getInMemoryCacheMemoryInternals`,\n * having the `this` parameter annotation is extremely useful for type checking\n * inside the function.\n *\n * If this is preserved in the exported types, though, it leads to a situation\n * where `ApolloCache.getMemoryInternals` is a function that requires a `this`\n * of the type `ApolloCache`, while the extending class `InMemoryCache` has a\n * `getMemoryInternals` function that requires a `this` of the type\n * `InMemoryCache`.\n * This is not compatible with TypeScript's inheritence system (although it is\n * perfectly correct), and so TypeScript will complain loudly.\n *\n * We still want to define our functions with the `this` annotation, though,\n * and have the return type inferred.\n * (This requirement for return type inference here makes it impossible to use\n * a function overload that is more explicit on the inner overload than it is\n * on the external overload.)\n *\n * So in the end, we use this helper to remove the `this` annotation from the\n * exported function types, while keeping it in the internal implementation.\n *\n */\ntype RemoveThis<T> = T extends (this: any) => infer R ? () => R : never;\n\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport const getApolloClientMemoryInternals =\n  __DEV__ ?\n    (_getApolloClientMemoryInternals as RemoveThis<\n      typeof _getApolloClientMemoryInternals\n    >)\n  : undefined;\n\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport const getInMemoryCacheMemoryInternals =\n  __DEV__ ?\n    (_getInMemoryCacheMemoryInternals as RemoveThis<\n      typeof _getInMemoryCacheMemoryInternals\n    >)\n  : undefined;\n\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport const getApolloCacheMemoryInternals =\n  __DEV__ ?\n    (_getApolloCacheMemoryInternals as RemoveThis<\n      typeof _getApolloCacheMemoryInternals\n    >)\n  : undefined;\n\nfunction getCurrentCacheSizes() {\n  // `defaultCacheSizes` is a `const enum` that will be inlined during build, so we have to reconstruct it's shape here\n  const defaults: Record<keyof CacheSizes, number> = {\n    parser: defaultCacheSizes[\"parser\"],\n    canonicalStringify: defaultCacheSizes[\"canonicalStringify\"],\n    print: defaultCacheSizes[\"print\"],\n    \"documentTransform.cache\": defaultCacheSizes[\"documentTransform.cache\"],\n    \"queryManager.getDocumentInfo\":\n      defaultCacheSizes[\"queryManager.getDocumentInfo\"],\n    \"PersistedQueryLink.persistedQueryHashes\":\n      defaultCacheSizes[\"PersistedQueryLink.persistedQueryHashes\"],\n    \"fragmentRegistry.transform\":\n      defaultCacheSizes[\"fragmentRegistry.transform\"],\n    \"fragmentRegistry.lookup\": defaultCacheSizes[\"fragmentRegistry.lookup\"],\n    \"fragmentRegistry.findFragmentSpreads\":\n      defaultCacheSizes[\"fragmentRegistry.findFragmentSpreads\"],\n    \"cache.fragmentQueryDocuments\":\n      defaultCacheSizes[\"cache.fragmentQueryDocuments\"],\n    \"removeTypenameFromVariables.getVariableDefinitions\":\n      defaultCacheSizes[\"removeTypenameFromVariables.getVariableDefinitions\"],\n    \"inMemoryCache.maybeBroadcastWatch\":\n      defaultCacheSizes[\"inMemoryCache.maybeBroadcastWatch\"],\n    \"inMemoryCache.executeSelectionSet\":\n      defaultCacheSizes[\"inMemoryCache.executeSelectionSet\"],\n    \"inMemoryCache.executeSubSelectedArray\":\n      defaultCacheSizes[\"inMemoryCache.executeSubSelectedArray\"],\n  };\n  return Object.fromEntries(\n    Object.entries(defaults).map(([k, v]) => [\n      k,\n      cacheSizes[k as keyof CacheSizes] || v,\n    ])\n  );\n}\n\nfunction _getApolloClientMemoryInternals(this: ApolloClient<any>) {\n  if (!__DEV__) throw new Error(\"only supported in development mode\");\n\n  return {\n    limits: getCurrentCacheSizes(),\n    sizes: {\n      print: globalCaches.print?.(),\n      parser: globalCaches.parser?.(),\n      canonicalStringify: globalCaches.canonicalStringify?.(),\n      links: linkInfo(this.link),\n      queryManager: {\n        getDocumentInfo: this[\"queryManager\"][\"transformCache\"].size,\n        documentTransforms: transformInfo(\n          this[\"queryManager\"].documentTransform\n        ),\n      },\n      ...(this.cache.getMemoryInternals?.() as Partial<\n        ReturnType<typeof _getApolloCacheMemoryInternals>\n      > &\n        Partial<ReturnType<typeof _getInMemoryCacheMemoryInternals>>),\n    },\n  };\n}\n\nfunction _getApolloCacheMemoryInternals(this: ApolloCache<any>) {\n  return {\n    cache: {\n      fragmentQueryDocuments: getWrapperInformation(this[\"getFragmentDoc\"]),\n    },\n  };\n}\n\nfunction _getInMemoryCacheMemoryInternals(this: InMemoryCache) {\n  const fragments = this.config.fragments as\n    | undefined\n    | {\n        findFragmentSpreads?: Function;\n        transform?: Function;\n        lookup?: Function;\n      };\n\n  return {\n    ..._getApolloCacheMemoryInternals.apply(this as any),\n    addTypenameDocumentTransform: transformInfo(this[\"addTypenameTransform\"]),\n    inMemoryCache: {\n      executeSelectionSet: getWrapperInformation(\n        this[\"storeReader\"][\"executeSelectionSet\"]\n      ),\n      executeSubSelectedArray: getWrapperInformation(\n        this[\"storeReader\"][\"executeSubSelectedArray\"]\n      ),\n      maybeBroadcastWatch: getWrapperInformation(this[\"maybeBroadcastWatch\"]),\n    },\n    fragmentRegistry: {\n      findFragmentSpreads: getWrapperInformation(\n        fragments?.findFragmentSpreads\n      ),\n      lookup: getWrapperInformation(fragments?.lookup),\n      transform: getWrapperInformation(fragments?.transform),\n    },\n  };\n}\n\nfunction isWrapper(f?: Function): f is OptimisticWrapperFunction<any, any> {\n  return !!f && \"dirtyKey\" in f;\n}\n\nfunction getWrapperInformation(f?: Function) {\n  return isWrapper(f) ? f.size : undefined;\n}\n\nfunction isDefined<T>(value: T | undefined | null): value is T {\n  return value != null;\n}\n\nfunction transformInfo(transform?: DocumentTransform) {\n  return recurseTransformInfo(transform).map((cache) => ({ cache }));\n}\n\nfunction recurseTransformInfo(transform?: DocumentTransform): number[] {\n  return transform ?\n      [\n        getWrapperInformation(transform?.[\"performWork\"]),\n        ...recurseTransformInfo(transform?.[\"left\"]),\n        ...recurseTransformInfo(transform?.[\"right\"]),\n      ].filter(isDefined)\n    : [];\n}\n\nfunction linkInfo(link?: ApolloLink): unknown[] {\n  return link ?\n      [\n        link?.getMemoryInternals?.(),\n        ...linkInfo(link?.left),\n        ...linkInfo(link?.right),\n      ].filter(isDefined)\n    : [];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}