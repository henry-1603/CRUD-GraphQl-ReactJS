{"ast":null,"code":"import { Observable } from \"zen-observable-ts\";\n// This simplified polyfill attempts to follow the ECMAScript Observable\n// proposal (https://github.com/zenparsing/es-observable)\nimport \"symbol-observable\";\n// The zen-observable package defines Observable.prototype[Symbol.observable]\n// when Symbol is supported, but RxJS interop depends on also setting this fake\n// '@@observable' string as a polyfill for Symbol.observable.\nvar prototype = Observable.prototype;\nvar fakeObsSymbol = \"@@observable\";\nif (!prototype[fakeObsSymbol]) {\n  // @ts-expect-error\n  prototype[fakeObsSymbol] = function () {\n    return this;\n  };\n}\nexport { Observable };","map":{"version":3,"names":["Observable","prototype","fakeObsSymbol"],"sources":["/Users/henilsuhagiya/Desktop/Study/Bluestone/formdata/node_modules/@apollo/src/utilities/observables/Observable.ts"],"sourcesContent":["import type {\n  Observer,\n  Subscription as ObservableSubscription,\n  Subscriber,\n} from \"zen-observable-ts\";\nimport { Observable } from \"zen-observable-ts\";\n\n// This simplified polyfill attempts to follow the ECMAScript Observable\n// proposal (https://github.com/zenparsing/es-observable)\nimport \"symbol-observable\";\n\nexport type { Observer, ObservableSubscription, Subscriber };\n\n// The zen-observable package defines Observable.prototype[Symbol.observable]\n// when Symbol is supported, but RxJS interop depends on also setting this fake\n// '@@observable' string as a polyfill for Symbol.observable.\nconst { prototype } = Observable;\nconst fakeObsSymbol = \"@@observable\" as keyof typeof prototype;\nif (!prototype[fakeObsSymbol]) {\n  // @ts-expect-error\n  prototype[fakeObsSymbol] = function () {\n    return this;\n  };\n}\n\nexport { Observable };\n"],"mappings":"AAKA,SAASA,UAAU,QAAQ,mBAAmB;AAE9C;AACA;AACA,OAAO,mBAAmB;AAI1B;AACA;AACA;AACQ,IAAAC,SAAS,GAAKD,UAAU,CAAAC,SAAf;AACjB,IAAMC,aAAa,GAAG,cAAwC;AAC9D,IAAI,CAACD,SAAS,CAACC,aAAa,CAAC,EAAE;EAC7B;EACAD,SAAS,CAACC,aAAa,CAAC,GAAG;IACzB,OAAO,IAAI;EACb,CAAC;AACH;AAEA,SAASF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}