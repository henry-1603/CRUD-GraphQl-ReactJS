{"ast":null,"code":"var _jsxFileName = \"/Users/henilsuhagiya/Desktop/Study/Bluestone/formdata/src/UpdateUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { gql, useMutation, useQuery } from '@apollo/client';\n\n// Define the GraphQL mutation for updating a user\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UPDATE_USER = gql`\n  mutation UpdateUser($id: ID!, $name: String!, $email: String!) {\n    updateUser(id: $id, name: $name, email: $email) {\n      id\n      name\n      email\n    }\n  }\n`;\n\n// Define the GraphQL query for fetching all users\nconst GET_USERS = gql`\n  query {\n    users {\n      id\n      name\n      email\n    }\n  }\n`;\nfunction App() {\n  _s();\n  const [formData, setFormData] = useState({\n    id: '',\n    name: '',\n    email: ''\n  });\n\n  // Query to fetch all users\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_USERS);\n\n  // Mutation to update a user\n  const [updateUser] = useMutation(UPDATE_USER, {\n    refetchQueries: [{\n      query: GET_USERS\n    }] // Refetch the users query after mutation\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Send mutation request to update user data\n      await updateUser({\n        variables: {\n          id: formData.id,\n          name: formData.name,\n          email: formData.email\n        }\n      });\n      // Reset the form after submission\n      setFormData({\n        id: '',\n        name: '',\n        email: ''\n      });\n    } catch (error) {\n      console.error('Error updating user:', error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"id\",\n          children: \"User ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"id\",\n          name: \"id\",\n          value: formData.id,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List of Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.id, \" :\", user.name, \" - \", user.email]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"giQUUu/FPxVjyAjU8TXaGCLVemU=\", false, function () {\n  return [useQuery, useMutation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","gql","useMutation","useQuery","jsxDEV","_jsxDEV","UPDATE_USER","GET_USERS","App","_s","formData","setFormData","id","name","email","loading","error","data","updateUser","refetchQueries","query","handleChange","e","value","target","handleSubmit","preventDefault","variables","console","children","fileName","_jsxFileName","lineNumber","columnNumber","message","onSubmit","htmlFor","type","onChange","required","users","map","user","_c","$RefreshReg$"],"sources":["/Users/henilsuhagiya/Desktop/Study/Bluestone/formdata/src/UpdateUser.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { gql, useMutation, useQuery } from '@apollo/client';\n\n// Define the GraphQL mutation for updating a user\nconst UPDATE_USER = gql`\n  mutation UpdateUser($id: ID!, $name: String!, $email: String!) {\n    updateUser(id: $id, name: $name, email: $email) {\n      id\n      name\n      email\n    }\n  }\n`;\n\n// Define the GraphQL query for fetching all users\nconst GET_USERS = gql`\n  query {\n    users {\n      id\n      name\n      email\n    }\n  }\n`;\n\nfunction App() {\n  const [formData, setFormData] = useState({\n    id: '',\n    name: '',\n    email: ''\n  });\n\n  // Query to fetch all users\n  const { loading, error, data } = useQuery(GET_USERS);\n\n  // Mutation to update a user\n  const [updateUser] = useMutation(UPDATE_USER, {\n    refetchQueries: [{ query: GET_USERS }] // Refetch the users query after mutation\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      // Send mutation request to update user data\n      await updateUser({\n        variables: { id: formData.id, name: formData.name, email: formData.email }\n      });\n      // Reset the form after submission\n      setFormData({\n        id: '',\n        name: '',\n        email: ''\n      });\n    } catch (error) {\n      console.error('Error updating user:', error);\n    }\n  };\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <div>\n      <h1>Update User</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"id\">User ID:</label>\n          <input\n            type=\"text\"\n            id=\"id\"\n            name=\"id\"\n            value={formData.id}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <button type=\"submit\">Update User</button>\n      </form>\n      {/* Display list of users */}\n      <h2>List of Users</h2>\n      <ul>\n        {data.users.map(user => (\n          <li key={user.id}>{user.id} :{user.name} - {user.email}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}