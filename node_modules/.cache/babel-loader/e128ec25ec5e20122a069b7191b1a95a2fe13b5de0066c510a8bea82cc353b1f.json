{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { compact } from \"./compact.js\";\nexport function mergeOptions(defaults, options) {\n  return compact(defaults, options, options.variables && {\n    variables: compact(__assign(__assign({}, defaults && defaults.variables), options.variables))\n  });\n}","map":{"version":3,"names":["compact","mergeOptions","defaults","options","variables","__assign"],"sources":["/Users/henilsuhagiya/Desktop/Study/Bluestone/formdata/node_modules/@apollo/src/utilities/common/mergeOptions.ts"],"sourcesContent":["import type {\n  QueryOptions,\n  WatchQueryOptions,\n  MutationOptions,\n  OperationVariables,\n} from \"../../core/index.js\";\n\nimport { compact } from \"./compact.js\";\n\ntype OptionsUnion<TData, TVariables extends OperationVariables, TContext> =\n  | WatchQueryOptions<TVariables, TData>\n  | QueryOptions<TVariables, TData>\n  | MutationOptions<TData, TVariables, TContext, any>;\n\nexport function mergeOptions<\n  TDefaultOptions extends Partial<OptionsUnion<any, any, any>>,\n  TOptions extends TDefaultOptions,\n>(\n  defaults: TDefaultOptions | Partial<TDefaultOptions> | undefined,\n  options: TOptions | Partial<TOptions>\n): TOptions & TDefaultOptions {\n  return compact(\n    defaults,\n    options,\n    options.variables && {\n      variables: compact({\n        ...(defaults && defaults.variables),\n        ...options.variables,\n      }),\n    }\n  );\n}\n"],"mappings":";AAOA,SAASA,OAAO,QAAQ,cAAc;AAOtC,OAAM,SAAUC,YAAYA,CAI1BC,QAAgE,EAChEC,OAAqC;EAErC,OAAOH,OAAO,CACZE,QAAQ,EACRC,OAAO,EACPA,OAAO,CAACC,SAAS,IAAI;IACnBA,SAAS,EAAEJ,OAAO,CAAAK,QAAA,CAAAA,QAAA,KACZH,QAAQ,IAAIA,QAAQ,CAACE,SAAU,GAChCD,OAAO,CAACC,SAAS;GAEvB,CACF;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}